on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: python
          package-name: oneshot-import
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      upload_url: ${{ steps.release.outputs.upload_url }}

  build:
    needs: [release-please]
    if: false # todo fix tcl error when starting binary
    #todo if: ${{ needs.release-please.outputs.release_created }}
    name: build-executable
    env:
      upload_url: ${{ needs.release-please.outputs.upload_url }}
      tag_name: ${{ needs.release-please.outputs.tag_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          #todo fix build for mac os
          # - os: macos-latest
          #   TARGET: macos
          #   OUT_FILE_NAME: oneshot-import.app
          #// ASSET_MIME: application/zip
          #todo fix build for win
          # - os: windows-latest
          #   TARGET: win
          #   OUT_FILE_NAME: oneshot-import.exe
          #   #// ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            TARGET: linux
            OUT_FILE_NAME: oneshot-import
            #// ASSET_MIME: application/x-pie-executable

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      #// - name: Setup dependencies (Linux)
      #//   if: matrix.os == 'ubuntu-latest'
      #//   run: |
      #//     #// sudo apt-get update
      #//     #// sudo apt-get install make tk tcl

      - name: Setup dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install make

      - name: Setup dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install make

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          make setup

      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: make build

      - name: Upload Release Asset
        id: upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ env.tag_name }} ./dist/${{ matrix.OUT_FILE_NAME }}
