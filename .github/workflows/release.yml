on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        with:
          release-type: python
          package-name: oneshot-import
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      upload_url: ${{ steps.release.outputs.upload_url }}

  build:
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    name: build-executable
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              make build &&
              cd dist/ &&
              zip -r9 oneshot-web oneshot-web.app/
            OUT_FILE_NAME: oneshot-web.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: make build
            OUT_FILE_NAME: oneshot-web.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-latest
            CMD_BUILD: make build
            OUT_FILE_NAME: oneshot-web
            ASSET_MIME: application/x-pie-executable

    steps:
      - uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Add Pipenv to PATH (Windows)
        if: startsWith(matrix.os, 'windows-')
        run: |
          echo "::add-path::C:\Users\runner\AppData\Local\Programs\Python\Python311\Scripts"

      - name: Setup Make (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install make

      - name: Setup Make (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install make

      - name: Setup Make (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install make

      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Upload Release Asset
        id: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME }}
          asset_name: oneshot-web-${{ matrix.os }}-${{ needs.release-please.outputs.tag_name }}
          asset_content_type: ${{ matrix.ASSET_MIME }}
